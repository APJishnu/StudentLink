<style>
  /* styles.css */

.centered-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.card {
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  width: 300px; /* Adjust as needed */
}

.card-header {
  background-color: #007bff;
  color: #fff;
  font-size: 18px;
  font-weight: bold;
  padding: 10px;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}

.card-body {
  padding: 20px;
}

.verification-code-container {
  display: flex;
}

.verification-code-input {
  width: 50px; /* Adjust as needed */
  height: 50px; /* Adjust as needed */
  font-size: 24px;
  text-align: center;
  border: 2px solid #ccc;
  border-radius: 5px;
  margin: 0 5px; /* Adjust spacing between boxes */
  outline: none;
}

.submit-button {
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  padding: 10px 20px;
  cursor: pointer;
}

.submit-button:hover {
  background-color: #0056b3;
}


</style>
<!-- Your existing HTML code -->
<div class="centered-container">
  <div class="card">
    <div class="card-header">
      Verification Code
    </div>
    <div class="card-body">
      
      <div id="countdownTimer" class="countdown">Countdown: <span id="countdownValue">30</span></div>
      <form id="verificationForm" action="/verification" method="post">
        <div class="verification-code-container">
          <input type="text" class="verification-code-input" maxlength="1" data-index="1" name="digit1" />
          <input type="text" class="verification-code-input" maxlength="1" data-index="2" name="digit2" />
          <input type="text" class="verification-code-input" maxlength="1" data-index="3" name="digit3" />
          <input type="text" class="verification-code-input" maxlength="1" data-index="4" name="digit4" />
          <input type="hidden" id="VerificationCode" name="VerificationCode" />
        </div>
        
        <button type="submit" id="submitButton" class="submit-button mt-3">Submit</button>
      </form>
    </div>
  </div>
</div>

<!-- Notification popup -->
<div class="modal fade" id="notificationPopup" tabindex="-1" aria-labelledby="notificationPopupLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="notificationPopupLabel">Notification</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="sendOTPForm" action="/verifyingEmail" method="post">
          <div class="mb-3">
            <label for="emailInput" class="form-label">Resending OTP</label>
            <input type="hidden" class="form-control" id="emailInput" name="emailInput" required>
            
          </div>
          <input type="hidden" class="form-control" id="verification" name="verificationCode" required>
          
        </form>
      </div>
    </div>
  </div>
</div>

<!-- jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  // JavaScript to handle input and update hidden input field
  document.addEventListener('input', function(event) {
    const target = event.target;
    if (target.classList.contains('verification-code-input')) {
      const index = parseInt(target.getAttribute('data-index'));
      const value = target.value;
      document.getElementById('VerificationCode').value = updateVerificationCode();
      if (value && index < 4) {
        const nextInput = document.querySelector(`.verification-code-input[data-index='${index + 1}']`);
        if (nextInput) {
          nextInput.focus();
        }
      }
    }
  });

  // JavaScript to handle backspace key
  document.addEventListener('keydown', function(event) {
    const target = event.target;
    if (event.key === 'Backspace' && target.classList.contains('verification-code-input')) {
      const index = parseInt(target.getAttribute('data-index'));
      if (index > 1 && !target.value) {
        const prevInput = document.querySelector(`.verification-code-input[data-index='${index - 1}']`);
        if (prevInput) {
          prevInput.focus();
        }
      }
    }
  });

  // Function to update the hidden input field with the verification code
  function updateVerificationCode() {
    const inputs = document.querySelectorAll('.verification-code-input');
    let code = '';
    inputs.forEach(input => {
      code += input.value;
    });
    return code;
  }

  // Function to start the countdown
  function startCountdown() {
    var timeleft = 29; // 30 seconds countdown
    var countdownValue = document.getElementById("countdownValue");

    var countdownTimer = setInterval(function() {
      if (timeleft <= 0) {
        clearInterval(countdownTimer);
        countdownValue.innerHTML = '<button id="resendButton" class="submit-button mt-3">Resend Code</button>';
      } else {
        countdownValue.textContent = timeleft;
      }
      timeleft -= 1;
    }, 1000);
  }

  // Attach event listener for "Resend Code" button
  document.addEventListener('click', function(event) {
    if (event.target && event.target.id === 'resendButton') {
      resendVerificationCode();
    }
  });

  // Function to handle the AJAX request to resend the verification code
  function resendVerificationCode() {
    // Assuming you're rendering the email from your backend
    var email = "{{verificationCollectionEmail}}"; 
    $.ajax({
      type: 'POST',
      url: '/forgotPassword', // Replace with your server route for email verification
      data: { email: email },
      success: function(response) {
       if (response.status === true) {
          $('#notificationPopup').modal('show');
          $('#emailInput').val(email); // Pre-fill the email input field in the form
          $('#verification').val(response.verificationCode); // Pre-fill the verification code input field

           setTimeout(function() {
                    $('#sendOTPForm').submit();
                }, 5000);
        } else {
          // Handle case where response status is not true
        }
        
      },
      error: function(xhr, status, error) {
        // Handle error response here (if needed)
        console.error(xhr.responseText);
      }
    });
  }

  // Call the function to start the countdown when the verification page is loaded
  window.addEventListener('DOMContentLoaded', function() {
    startCountdown();
  });
</script>
